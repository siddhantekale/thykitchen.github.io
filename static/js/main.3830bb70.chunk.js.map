{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","images","bgImageIndex","setBgImageIndex","useState","loadedImages","setLoadedImages","useEffect","Promise","all","map","src","resolve","reject","img","Image","onload","onerror","err","loadImage","then","loaded","catch","console","error","interval","setInterval","prevIndex","length","clearInterval","document","querySelector","concat","script","createElement","defer","Error","body","appendChild","loadScript","log","React","style","height","display","justifyContent","alignItems","position","overflow","index","key","backgroundImage","backgroundSize","backgroundPosition","top","left","right","bottom","transition","opacity","Container","maxWidth","textAlign","backgroundColor","padding","borderRadius","zIndex","alt","width","marginBottom","Typography","variant","gutterBottom","Box","component","sx","& .MuiTextField-root","noValidate","autoComplete","className","data-key-id","data-height","marginTop","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"8NAyHeA,MAvHf,WACE,MAAMC,EAAS,CACb,mBACA,mBACA,mBACA,mBACA,qBAEKC,EAAcC,GAAmBC,mBAAS,IAC1CC,EAAcC,GAAmBF,mBAAS,IAgDjD,OA9CAG,oBAAU,KASRC,QAAQC,IAAIR,EAAOS,IAAKC,GARLA,IACV,IAAIH,QAAQ,CAACI,EAASC,KAC3B,MAAMC,EAAM,IAAIC,MAChBD,EAAIH,IAAMA,EACVG,EAAIE,OAAS,KAAMJ,EAAQE,IAC3BA,EAAIG,QAAWC,IAAQL,EAAOK,MAGFC,CAAUR,KACvCS,KAAMC,IACLf,EAAgBe,KAEjBC,MAAOJ,GAAQK,QAAQC,MAAM,wBAAyBN,KACxD,CAACjB,IACJM,oBAAU,KACR,MAAMkB,EAAWC,YAAY,KAC3BvB,EAAiBwB,IAAeA,EAAY,GAAK1B,EAAO2B,SACvD,KACH,MAAO,IAAMC,cAAcJ,IAC1B,CAACxB,EAAO2B,SAiBXrB,oBAAU,KAfUI,IAEdmB,SAASC,cAAa,eAAAC,OAAgBrB,EAAG,OACpCH,QAAQI,UAEV,IAAIJ,QAAQ,CAACI,EAASC,KAC3B,MAAMoB,EAASH,SAASI,cAAc,UACtCD,EAAOtB,IAAMA,EACbsB,EAAOE,OAAQ,EACfF,EAAOjB,OAAS,KAAMJ,EAAQqB,IAC9BA,EAAOhB,QAAU,KAAMJ,EAAO,IAAIuB,MAAK,yBAAAJ,OAA0BrB,MACjEmB,SAASO,KAAKC,YAAYL,KAK5BM,CAAW,0CACRnB,KAAK,KACJG,QAAQiB,IAAI,4BAEblB,MAAOJ,IACNK,QAAQC,MAAMN,MAEjB,IAEDuB,IAAAP,cAAA,OACEQ,MAAO,CACLC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,WACVC,SAAU,WAGX3C,EAAaK,IAAI,CAACI,EAAKmC,IACtBR,IAAAP,cAAA,OACEgB,IAAKD,EACLP,MAAO,CACLS,gBAAe,OAAAnB,OAASlB,EAAIH,IAAG,KAC/ByC,eAAgB,QAChBC,mBAAoB,SACpBN,SAAU,WACVO,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,WAAY,yBACZC,QAASV,IAAU/C,EAAe,EAAI,MAI5CuC,IAAAP,cAAC0B,IAAS,CACRC,SAAS,KACTnB,MAAO,CACLoB,UAAW,SACXC,gBAAiB,2BACjBC,QAAS,OACTC,aAAc,OACdlB,SAAU,WACVmB,OAAQ,IAGVzB,IAAAP,cAAA,OAAKvB,IAAI,mBAAmBwD,IAAI,OAAOzB,MAAO,CAAE0B,MAAO,QAASC,aAAc,UAC9E5B,IAAAP,cAACoC,IAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,yDAGtC/B,IAAAP,cAACuC,IAAG,CACFC,UAAU,OACVC,GAAI,CACFC,uBAAwB,CAAEP,aAAc,SAE1CQ,YAAU,EACVC,aAAa,QAGfrC,IAAAP,cAAA,OACE6C,UAAU,oBACVC,cAAY,SACZC,cAAY,QACZvC,MAAO,CAAEwC,UAAW,aCvGfC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnE,KAAAkE,EAAAE,KAAA,UAAqBpE,KAAKqE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWlE,SAASmE,eAAe,SACpDC,OACHzD,IAAAP,cAACO,IAAM0D,WAAU,KACf1D,IAAAP,cAAClC,EAAG,QAORmF","file":"static/js/main.3830bb70.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Typography, Box } from '@mui/material';\nfunction App() {\n  const images = [\n    '/assets/bg01.jpg',\n    '/assets/bg02.jpg',\n    '/assets/bg03.jpg',\n    '/assets/bg04.jpg',\n    '/assets/bg05.jpg',\n  ];\n  const [bgImageIndex, setBgImageIndex] = useState(0);\n  const [loadedImages, setLoadedImages] = useState([]);\n  // Pre-load the images\n  useEffect(() => {\n    const loadImage = (src) => {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => resolve(img);\n        img.onerror = (err) => reject(err);\n      });\n    };\n    Promise.all(images.map((src) => loadImage(src)))\n      .then((loaded) => {\n        setLoadedImages(loaded);\n      })\n      .catch((err) => console.error('Failed to load images', err));\n  }, [images]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBgImageIndex((prevIndex) => (prevIndex + 1) % images.length);\n    }, 5000); // Change image every 5 seconds\n    return () => clearInterval(interval);\n  }, [images.length]);\n  // Function to dynamically load the external script\n  const loadScript = (src) => {\n    // Check if the script is already loaded\n    if (document.querySelector(`script[src=\"${src}\"]`)) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.defer = true;\n      script.onload = () => resolve(script);\n      script.onerror = () => reject(new Error(`Failed to load script ${src}`));\n      document.body.appendChild(script);\n    });\n  };\n  // Use useEffect to load the script when the component mounts\n  useEffect(() => {\n    loadScript('https://getlaunchlist.com/js/widget.js')\n      .then(() => {\n        console.log('External script loaded');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      {loadedImages.map((img, index) => (\n        <div\n          key={index}\n          style={{\n            backgroundImage: `url(${img.src})`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            transition: 'opacity 1s ease-in-out',\n            opacity: index === bgImageIndex ? 1 : 0,\n          }}\n        />\n      ))}\n      <Container\n        maxWidth=\"sm\"\n        style={{\n          textAlign: 'center',\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          padding: '20px',\n          borderRadius: '10px',\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <img src=\"/assets/logo.png\" alt=\"Logo\" style={{ width: '150px', marginBottom: '20px' }} />\n        <Typography variant=\"h5\" gutterBottom>\n          Register your interest by providing your email below:\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            '& .MuiTextField-root': { marginBottom: '16px' },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n        </Box>\n        <div\n          className=\"launchlist-widget\"\n          data-key-id=\"ocdNxw\"\n          data-height=\"180px\"\n          style={{ marginTop: '20px' }}\n        ></div>\n      </Container>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}